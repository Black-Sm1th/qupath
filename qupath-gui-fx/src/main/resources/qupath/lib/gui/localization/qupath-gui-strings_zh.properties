# Support for context help
ContextHelp.title = 上下文帮助
ContextHelp.defaultHelpText = 将鼠标移动到某个项目上以查看可用的帮助文本
ContextHelp.warning.selectionMode = 选择模式已激活 - 这将把绘图工具转换为选择工具
ContextHelp.warning.hiddenObjectsPredicate = 叠加选项设置为基于谓词隐藏对象
ContextHelp.warning.annotationsHidden = 注释已隐藏
ContextHelp.warning.detectionsHidden = 检测结果已隐藏
ContextHelp.warning.classificationsHidden = 对象可能基于其分类被隐藏。\n\
                                        您可以在"注释"标签下的"分类"列表中更改此设置。
ContextHelp.warning.tmaCoresHidden = TMA网格已隐藏
ContextHelp.warning.pixelOverlayHidden = 像素分类叠加层已隐藏
ContextHelp.warning.opacityZero = 不透明度滑块为零（未选择的对象将不可见）
ContextHelp.warning.noImage = 当前查看器中没有打开的图像
ContextHelp.warning.noProject = 没有打开的项目（QuPath最好使用项目）
ContextHelp.warning.gamma = Gamma值不是1.0。这会影响图像的显示方式。\n\
                            使用亮度/对比度对话框更改gamma值。
ContextHelp.warning.invertedBackground = 图像正在以反转背景显示。\n\
                            在亮度/对比度对话框中更改此选项。
ContextHelp.warning.noChannels = 没有选择通道！\n\
                                 使用"亮度/对比度"命令选择通道。
ContextHelp.warning.colorsSimilar = 至少一个分类颜色与默认对象颜色相似。\n\
                                 将难以看到对象是否被分类。
ContextHelp.warning.unseenErrors = 日志中报告了尚未查看的错误。\n\
                            请检查日志以获取详细信息。
ContextHelp.warning.pixelSizeMissing = 未设置像素大小信息。\n\
                            某些命令需要此信息，可以在"图像"标签下设置。
ContextHelp.warning.imageTypeMissing = 未设置图像类型。\n\
                            某些命令需要此信息，可以在"图像"标签下设置。
ContextHelp.warning.largeNonPyramidalImage = 图像很大，但不是金字塔式（即多分辨率）。\n\
                            这可能会导致性能问题，可以通过创建金字塔式图像来解决。

# Startup/Welcome message
Welcome.title = 欢迎
Welcome.develop = 开发
Welcome.developMessage = 在GitHub上查看QuPath的源代码 -\n或查看更新日志中的新内容
Welcome.discuss = 讨论
Welcome.discussMessage = 加入其他QuPath用户并在科学社区图像论坛上\n搜索数千个讨论
Welcome.docs = 文档
Welcome.docsMessage = 在ReadTheDocs上查找QuPath分步指南、视频教程\n和更多内容
Welcome.welcomeMessage = 欢迎使用QuPath！
Welcome.chooseTheme = 选择主题
Welcome.checkUpdates = 检查更新
Welcome.showOnStartup = 启动时显示
Welcome.cite = 使用软件时别忘了引用最新的QuPath论文！
Welcome.clickForDetails = 点击查看详情
Welcome.getStarted = 开始使用！
Welcome.defaultMessage = 了解更多关于QuPath的信息，自定义关键选项，\n或点击"开始使用！"关闭此消息
Welcome.macOsAarch64 = Bio-Formats尚未完全支持Apple Silicon -\n\
  某些图像格式（如.czi、.ndpis）仅适用于Intel版本\n\
  {{点击这里}}获取更多信息。

Startup.scriptTitle = 启动脚本
Startup.scriptRun = 正在运行启动脚本\n%s

# Main analysis pane
AnalysisPane.projectTab = 项目
AnalysisPane.imageTab = 图像
AnalysisPane.annotationsTab = 注释
AnalysisPane.hierarchyTab = 层次结构
AnalysisPane.historyTab = 命令历史
AnalysisPane.workflowTab = 工作流
AnalysisPane.switchText = 切换到%s窗格。\n您也可以右键点击标签将其分离到自己的窗口中。然后关闭窗口使其再次成为标签。
AnalysisPane.measurementsTab = 测量
AnalysisPane.descriptionTab = 描述

# Dialogs
Dialogs.noImage = 没有可用的图像！
Dialogs.noProject = 没有可用的项目！

# General
General.objects.annotations = 标注
General.objects.detections = 检测
General.objects.cells = 细胞
General.objects.tiles = 区块
General.objects.tmaCores = TMA核心
General.add = 添加
General.remove = 移除
General.deleteObject = 删除对象
General.deleteObjects = 删除对象

# Drawing tools
Tools.move = 移动
Tools.move.description = 移动工具，用于在查看器中移动（平移）和移动对象（平移）
Tools.rectangle = 矩形
Tools.rectangle.description = 点击并拖动以绘制矩形注释。\n按住"Shift"键可使形状保持为正方形。
Tools.ellipse = 椭圆
Tools.ellipse.description = 点击并拖动以绘制椭圆注释。\n按住"Shift"键可使形状保持为圆形。
Tools.line = 线条
Tools.line.description = 点击并拖动以绘制线条注释。\n右键点击工具栏按钮可选择切换到使用箭头。
Tools.arrowStart = 箭头（起点）
Tools.arrowEnd = 箭头（终点）
Tools.arrowDouble = 箭头（双向）
Tools.polygon = 多边形
Tools.polygon.description = 创建闭合多边形注释。\n您可以点击单个点（双击结束）或点击并拖动（释放鼠标按钮结束）。
Tools.polyline = 折线
Tools.polyline.description = 创建折线（即开放多边形）注释。\n您可以点击单个点（双击结束）或点击并拖动（释放鼠标按钮结束）。
Tools.brush = 画笔
Tools.brush.description = 点击并拖动以使用画笔绘制。\n默认情况下，绘制区域的大小取决于查看器中的缩放级别。
Tools.points = 点
Tools.points.description = 点击以向注释添加点

Tools.selectionMode = 选择模式
Tools.selectionMode.description = 开启/关闭选择模式 - 这将把绘图工具转换为选择工具

# Additional toolbar items
Toolbar.overlayOpacity.description = 调整叠加层不透明度
Toolbar.magnification = 放大倍数
Toolbar.magnification.description = 显示放大倍数 - 双击编辑
Toolbar.setMagnification = 设置放大倍数
Toolbar.setDownsample = 设置降采样因子

Toolbar.magnificationScale.description = 显示比例值 - 双击编辑
Toolbar.showMeasurementsTable.description = 显示测量表

Toolbar.message.promptMagnification = 输入放大倍数
Toolbar.message.invalidMagnification = 无效的放大倍数%s。\n请使用大于0的值。
Toolbar.message.promptDownsample = 输入降采样因子
Toolbar.message.invalidDownsample = 无效的降采样%s。\n请使用大于0的值。

# Commands that work on viewer overlays
OverlayActions.showCountingGrid = 显示网格
OverlayActions.showCountingGrid.description = 显示/隐藏计数网格叠加层
OverlayActions.setCountingGridSpacing = 设置网格间距
OverlayActions.setCountingGridSpacing.description = 设置计数网格的间距
OverlayActions.showPixelOverlay = 显示像素分类
OverlayActions.showPixelOverlay.description = 显示/隐藏像素叠加层（用于像素分类）
OverlayActions.showAnnotations = 显示注释
OverlayActions.showAnnotations.description = 显示/隐藏注释对象
OverlayActions.showAnnotationNames = 显示注释名称
OverlayActions.showAnnotationNames.description = 显示/隐藏注释名称（如果可用）
OverlayActions.fillAnnotations = 填充注释
OverlayActions.fillAnnotations.description = 填充/取消填充注释对象ROI以显示
OverlayActions.showDetections = 显示检测结果
OverlayActions.showDetections.description = 显示/隐藏检测对象
OverlayActions.fillDetections = 填充检测结果
OverlayActions.fillDetections.description = 填充/取消填充检测对象ROI以显示
OverlayActions.showTMAGrid = 显示TMA网格
OverlayActions.showTMAGrid.description = 显示/隐藏组织微阵列网格（如果可用）
OverlayActions.showTMALabels = 显示TMA网格标签
OverlayActions.showTMALabels.description = 显示/隐藏组织微阵列核心标签（如果可用）
OverlayActions.showConnections = 显示对象连接
OverlayActions.showConnections.description = 显示对象之间的连接（如果可用）。\n这可以与某些空间命令一起使用，例如显示Delaunay三角剖分作为叠加层。

OverlayActions.showCellBoundaries = 仅细胞边界
OverlayActions.showCellBoundaries.description = 仅通过绘制细胞边界ROI来显示细胞
OverlayActions.showCellNuclei = 仅细胞核
OverlayActions.showCellNuclei.description = 仅通过绘制细胞核ROI来显示细胞
OverlayActions.showCellBoth = 细胞核和细胞边界
OverlayActions.showCellBoth.description = 通过绘制细胞边界和细胞核ROI来显示细胞（如果可用）
OverlayActions.showCellCentroids = 仅细胞质心
OverlayActions.showCellCentroids.description = 仅通过绘制细胞质心来显示细胞。\n形状和颜色将取决于分类。

# Commands that work on viewers
ViewerActions.overview = 显示幻灯片概览
ViewerActions.overview.description = 显示/隐藏查看器概览图像。这是一个可点击的缩略图，用于导航。
ViewerActions.location = 显示光标位置
ViewerActions.location.description = 显示/隐藏光标位置文本
ViewerActions.scalebar = 显示比例尺
ViewerActions.scalebar.description = 显示/隐藏查看器比例尺
ViewerActions.synchronize = 同步查看器
ViewerActions.synchronize.description = 在多个查看器中打开图像时同步平移和缩放
ViewerActions.matchResolutions = 匹配查看器分辨率
ViewerActions.matchResolutions.description = 调整缩放因子以匹配多个查看器中打开的图像的分辨率
ViewerActions.detachViewer = 从网格分离查看器
ViewerActions.detachViewer.description = 将选定的查看器从其网格分离到自己的窗口中
ViewerActions.attachViewer = 将查看器附加到网格
ViewerActions.attachViewer.description = 将分离的查看器添加回查看器网格（如果有空间）
ViewerActions.zoomToFit = 缩放以适应
ViewerActions.zoomToFit.description = 调整所有图像的缩放以在查看器中完全显示图像
ViewerActions.grid1x1 = 网格1 x 1（单个查看器）
ViewerActions.grid1x1.description = 设置查看器网格以包含单个查看器
ViewerActions.grid2x1 = 网格2 x 1（垂直）
ViewerActions.grid2x1.description = 设置查看器网格以包含2个查看器，垂直排列
ViewerActions.grid1x2 = 网格1 x 2（水平）
ViewerActions.grid1x2.description = 设置查看器网格以包含2个查看器，水平排列
ViewerActions.grid2x2 = 网格2 x 2
ViewerActions.grid2x2.description = 设置查看器网格以包含4个查看器，以2x2网格排列
ViewerActions.grid3x3 = 网格3 x 3
ViewerActions.grid3x3.description = 设置查看器网格以包含9个查看器，以3x3网格排列

# Shared commands for a QuPath instance
CommonActions.objectDescriptions = 显示对象描述
CommonActions.objectDescriptions.description = 显示当前选中对象的描述（如果可用）。\n描述可以是作为对象的"description"属性添加的任何纯文本、markdown或html（目前仅支持注释）。
CommonActions.measureTMA = 显示TMA测量结果
CommonActions.measureTMA.description = 显示组织微阵列（TMA）核心的测量表
CommonActions.measureAnnotations = 显示注释测量结果
CommonActions.measureAnnotations.description = 显示注释对象的测量表
CommonActions.measureDetections = 显示检测测量结果
CommonActions.measureDetections.description = 显示检测对象的测量表
CommonActions.gridViewTMA = 显示TMA核心网格视图
CommonActions.gridViewTMA.description = 在网格视图中显示组织微阵列（TMA）核心测量结果
CommonActions.gridViewAnnotations = 显示注释网格视图
CommonActions.gridViewAnnotations.description = 在网格视图中显示注释测量结果
CommonActions.showAnalysisPane = 显示分析窗格
CommonActions.showAnalysisPane.description = 显示分析窗格。\n这包含用于管理项目、图像和对象的主要标签。
CommonActions.showHelp = 显示交互式帮助
CommonActions.showHelp.description = 基于光标位置和QuPath当前状态显示交互式帮助信息
CommonActions.showLog = 显示日志
CommonActions.showLog.description = 显示日志。\n这对于识别和调试错误非常有帮助。\n如果您希望报告使用QuPath时的问题，请检查日志以提供相关信息。
CommonActions.showPrefPane = 首选项...
CommonActions.showPrefPane.description = 设置首选项以自定义QuPath的外观和行为
CommonActions.showBrightnessContrast = 亮度/对比度
CommonActions.showBrightnessContrast.description = 显示亮度和对比度对话框。\n这也用于调整通道和颜色。\n它可以改变图像的显示方式，但不会改变图像本身。
CommonActions.showCountingTool = 计数工具
CommonActions.showCountingTool.description = 显示计数窗格。\n这在使用"点"工具进行注释时使用。
CommonActions.showPointConvexHull = 显示点凸包
CommonActions.showPointConvexHull.description = 显示点注释的凸包。\n这有助于识别包含点的区域 - 并找到任何意外位置的点。
CommonActions.addTMANote = 添加TMA注释
CommonActions.addTMANote.description = 向选定的组织微阵列（TMA）核心添加注释。

# File menu
Menu.File = 文件
Menu.File.Project = 项目...
Menu.File.ExportImage = 导出图像...
Menu.File.ExportSnapshot = 导出快照...
Menu.File.TMA = TMA数据...

Action.File.Project.createProject = 创建项目
Action.File.Project.createProject.description = 创建新项目。\n通常只需将空文件夹拖到QuPath上即可创建项目，而不是通过这些菜单导航。
Action.File.Project.openProject = 打开项目
Action.File.Project.openProject.description = 打开现有项目。\n通常只需将项目文件夹拖到QuPath上即可打开，而不是使用此命令。
Action.File.Project.closeProject = 关闭项目
Action.File.Project.closeProject.description = 关闭当前项目，包括任何打开的图像。
Action.File.Project.addImages = 添加图像
Action.File.Project.addImages.description = 向当前项目添加图像。\n您也可以通过将文件拖到主QuPath窗口来添加图像。
Action.File.Project.exportImageList = 导出图像列表
Action.File.Project.exportImageList.description = 导出当前项目中图像的图像路径列表。
Action.File.Project.editMetadata = 编辑项目元数据
Action.File.Project.editMetadata.description = 编辑当前项目的元数据。\n通过向图像添加键值属性，可以更容易地对它们进行排序和查询。
Action.File.Project.checkUris = 检查项目URI
Action.File.Project.checkUris.description = 检查当前项目中图像的"统一资源标识符"。\n这基本上有助于在文件移动且无法再找到图像时修复问题。
Action.File.Project.importLegacy = 从v0.1.2导入图像
Action.File.Project.importLegacy.description = 从旧版项目（QuPath v0.1.2或更早）导入图像。\n请注意，混合使用不同版本的QuPath进行分析通常不是一个好主意，但这可以帮助恢复旧数据和注释。\n\n原始图像需要可用，且项目文件中的路径设置正确。

Action.File.TMA.importMap = 导入TMA地图
Action.File.TMA.importMap.description = 导入TMA地图，例如包含每个核心"病例ID"值的网格
Action.File.TMA.exportData = 导出TMA数据
Action.File.TMA.exportData.description = 导出当前图像的TMA数据，格式与"TMA数据查看器"兼容
Action.File.TMA.dataViewer = 启动TMA数据查看器
Action.File.TMA.dataViewer.description = 启动"TMA数据查看器"以可视化之前导出的TMA核心数据

Action.File.ExportImage.original = 原始像素
Action.File.ExportImage.original.description = 通过从原始图像提取像素来导出图像区域
Action.File.ExportImage.rendered = 渲染的RGB（带叠加层）
Action.File.ExportImage.rendered.description = 导出图像区域，作为与查看器中显示方式匹配的RGB图像

Action.File.ExportSnapshot.windowScreenshot = 主窗口截图
Action.File.ExportSnapshot.windowScreenshot.description = 将屏幕区域导出到剪贴板，对应主QuPath窗口。\n这包括任何额外的重叠窗口和对话框。
Action.File.ExportSnapshot.windowContent = 主窗口内容
Action.File.ExportSnapshot.windowContent.description = 将主QuPath窗口的内容导出到剪贴板。\n这会忽略任何额外的重叠窗口和对话框。
Action.File.ExportSnapshot.viewerContent = 当前查看器内容
Action.File.ExportSnapshot.viewerContent.description = 将当前查看器的内容导出到剪贴板。\n注意，这会创建一个RGB图像，不一定包含原始像素值。

Action.File.open = 打开...
Action.File.open.description = 使用文件选择器在当前查看器中打开图像。\n您也可以直接将文件拖到查看器上。
Action.File.openUri = 打开URI...
Action.File.openUri.description = 通过输入图像路径在当前查看器中打开图像。\n这可以用于添加不由本地文件表示的图像（例如由OMERO托管），但请注意需要可用的兼容图像读取器来解释它们。
Action.File.reloadData = 重新加载数据
Action.File.reloadData.description = 重新加载当前图像的任何之前保存的数据。\n这提供了更戏剧性的"撤销"形式（尽管没有"重做"选项）。
Action.File.save = 保存
Action.File.save.description = 为此图像保存.qpdata文件。\n此命令最好在项目内使用，QuPath将选择保存文件的位置。
Action.File.saveAs = 另存为
Action.File.saveAs.description = 为此图像保存.qpdata文件，指定文件路径。\n警告！通常最好使用项目，让QuPath决定存储数据文件的位置。
Action.File.importObjects = 从文件导入对象
Action.File.importObjects.description = 从GeoJSON或.qpdata文件导入对象
Action.File.exportGeoJSON = 将对象导出为GeoJSON
Action.File.exportGeoJSON.description = 将对象以GeoJSON格式导出到文件
Action.File.quit = 退出
Action.File.quit.description = 退出QuPath

# Edit menu
Menu.Edit = 编辑
Menu.Edit.Copy = 复制到剪贴板...

Action.Edit.undo = 撤销
Action.Edit.undo.description = 撤销当前查看器的最后一个操作。\n注意QuPath的撤销是有限的，当存在许多对象时会自动关闭（出于性能原因）。\n可以在首选项中调整限制。
Action.Edit.redo = 重做
Action.Edit.redo.description = 重做当前查看器的最后一个操作。

Action.Edit.Copy.selectedObjects = 选中的对象
Action.Edit.Copy.selectedObjects.description = 将选中的对象作为GeoJSON复制到系统剪贴板
Action.Edit.Copy.annotationObjects = 注释对象
Action.Edit.Copy.annotationObjects.description = 将所有注释对象作为GeoJSON复制到系统剪贴板
Action.Edit.Copy.currentViewer = 当前查看器
Action.Edit.Copy.currentViewer.description = 将当前查看器的内容复制到剪贴板。\n注意，这会创建一个RGB图像，不一定包含原始像素值。
Action.Edit.Copy.mainWindowContent = 主窗口内容
Action.Edit.Copy.mainWindowContent.description = 将主QuPath窗口的内容复制到剪贴板。\n这会忽略任何额外的重叠窗口和对话框。
Action.Edit.Copy.mainWindowScreenshot = 主窗口截图
Action.Edit.Copy.mainWindowScreenshot.description = 将屏幕区域复制到剪贴板，对应主QuPath窗口。\n这包括任何额外的重叠窗口和对话框。
Action.Edit.Copy.fullScreenshot = 完整截图
Action.Edit.Copy.fullScreenshot.description = 制作截图并复制到剪贴板。

Action.Edit.paste = 粘贴
Action.Edit.paste.description = 如果可能，粘贴系统剪贴板的内容。\n如果剪贴板内容是GeoJSON对象，对象将被粘贴到当前图像。\n否则，任何找到的文本将在脚本编辑器中显示。
Action.Edit.pasteToCurrentPlane = 将对象粘贴到当前平面
Action.Edit.pasteToCurrentPlane.description = 如果可能，将GeoJSON对象从系统剪贴板粘贴到当前z切片和时间点。\n如果需要避免重复，将生成新的对象ID。
Action.Edit.resetPreferences = 重置首选项
Action.Edit.resetPreference.description = 将首选项重置为默认值。\n如果您遇到任何新开发的QuPath持久性问题，这可能很有用。

# Menu tools
Menu.Tools = 工具

# Classify menu
Menu.Classify = 分类
Menu.Classify.ObjectClassification = 对象分类
Menu.Classify.PixelClassification = 像素分类
Menu.Classify.TrainingImages = 训练图像

Action.Classify.Objects.resetDetectionClassifications = 重置检测分类
Action.Classify.Objects.resetDetectionClassifications.description = 重置所有检测的分类

# Analyze menu
Menu.Analyze = 分析
Menu.Analyze.Preprocessing = 预处理
Menu.Analyze.Tiles = 图块和超像素
Menu.Analyze.CellDetection = 细胞检测
Menu.Analyze.Features = 计算特征
Menu.Analyze.Spatial = 空间分析
Menu.Analyze.DensityMaps = 密度图

Action.Analyze.Preprocessing.estimateStainVectors = 估计染色向量
Action.Analyze.Preprocessing.estimateStainVectors.description = 估计明场图像中颜色反卷积的染色向量。\n这可以在有精确2种染色（例如苏木精和伊红，苏木精和DAB）时使用，以改善染色分离。

Action.Analyze.Tiles.createTiles = 创建图块
Action.Analyze.Tiles.createTiles.description = 创建图块。这些可以作为较大工作流的一部分很有用，例如通过向图块添加强度测量，训练分类器，然后合并分类的图块以识别较大区域。

Action.Analyze.Features.smoothedFeatures = 添加平滑特征
Action.Analyze.Features.smoothedFeatures.description = 通过计算相邻对象相应测量的加权和来补充检测对象的测量
Action.Analyze.Features.intensityFeatures = 添加强度特征
Action.Analyze.Features.intensityFeatures.description = 向对象添加新的基于强度的特征
Action.Analyze.Features.shapeFeatures = 添加形状特征
Action.Analyze.Features.shapeFeature.description = 向对象添加新的基于形状的特征

Action.Analyze.Spatial.distanceToAnnotations2D = 到注释的2D距离
Action.Analyze.Spatial.distanceToAnnotations2D.description = 计算检测质心与每个分类的最接近注释之间的距离，如果质心在注释内则使用零。\n例如，这可以用于识别每个细胞与已注释的"更大"区域（例如肿瘤区域、血管）的距离。
Action.Analyze.Spatial.signedDistanceToAnnotations2D = 到注释的2D有符号距离
Action.Analyze.Spatial.signedDistanceToAnnotations2D.description = 计算检测质心与每个分类的最接近注释之间的距离，如果质心在注释内则使用到边界的负距离。\n例如，这可以用于识别每个细胞与已注释的"更大"区域（例如肿瘤区域、血管）的距离。
Action.Analyze.Spatial.detectionCentroidDistances2D = 检测质心2D距离
Action.Analyze.Spatial.detectionCentroidDistances2D.description = 计算每个分类的检测质心之间的距离。\n例如，这可以用于识别指定类型的最接近细胞。

# View menu
Menu.View = 视图
Menu.View.Multiview = 多视图...
Menu.View.Zoom = 缩放...
Menu.View.CellDisplay = 细胞显示
Menu.View.Multitouch = 多点触控手势

Action.View.commandList = 显示命令列表
Action.View.commandList.description = 显示命令列表（比导航菜单容易得多...）
Action.View.recentCommands = 显示最近命令
Action.View.recentCommands.description = 显示包含最近使用命令的列表
Action.View.Multiview.gridMenu = 设置网格大小
Action.View.Multiview.addRow = 添加行
Action.View.Multiview.addRow.description = 向多视图网格添加新的查看器行。\n这使得可以并排查看两个或更多图像（垂直）。
Action.View.Multiview.addColumn = 添加列
Action.View.Multiview.addColumn.description = 向多视图网格添加新的查看器列。\n这使得可以并排查看两个或更多图像（水平）。
Action.View.Multiview.removeRow = 移除行
Action.View.Multiview.removeRow.description = 如果可能，从多视图网格中移除包含当前查看器的行。\n最后一行不能移除。
Action.View.Multiview.removeColumn = 移除列
Action.View.Multiview.removeColumn.description = 如果可能，从多视图网格中移除包含当前查看器的列。\n最后一列不能移除。
Action.View.Multiview.resetGridSize = 重置查看器大小
Action.View.Multiview.resetGridSize.description = 重置多视图网格，使所有查看器具有相同的大小
Action.View.Multiview.closeViewer = 关闭查看器
Action.View.Multiview.closeViewer.description = 关闭当前查看器中的图像。\n在从多视图网格中移除查看器之前需要此操作。
Action.View.channelViewer = 显示通道查看器
Action.View.channelViewer.description = 打开一个查看器窗口，并排显示图像的各个通道。\n这在处理多重/多通道荧光图像时很有用。\n右键点击查看器以调整设置。
Action.View.miniViewer = 显示迷你查看器
Action.View.miniViewer.description = 打开一个查看器窗口，显示光标下像素的视图。\n这在同时查看放大和缩小的图像时很有用。
Action.View.rotate = 旋转图像
Action.View.rotate.description = 视觉上旋转图像（这仅用于显示 - 坐标系统保持不变）
Action.View.viewTracker = 显示视图跟踪器
Action.View.viewTracker.description = 记录查看器中的缩放和平移移动，以便稍后播放和分析
Action.View.slideLabel = 显示幻灯片标签
Action.View.slideLabel.description = 在活动查看器中显示与图像关联的幻灯片标签（如果可用）
Action.View.inputDisplay = 显示输入显示
Action.View.inputDisplay.description = 在屏幕上显示鼠标点击和按键。\n这在演示和教程中特别有用。
Action.View.memoryMonitor = 显示内存监视器
Action.View.memoryMonitor.description = 显示一个对话框来跟踪QuPath中的内存使用情况，并在需要时清除缓存
Action.View.Zoom.400 = 400%
Action.View.Zoom.400.description = 将缩放因子设置为400%（降采样=0.25）
Action.View.Zoom.100 = 100%
Action.View.Zoom.100.description = 将缩放因子设置为100%（降采样=1）
Action.View.Zoom.10 = 10%
Action.View.Zoom.10.description = 将缩放因子设置为10%（降采样=10）
Action.View.Zoom.1 = 1%
Action.View.Zoom.1.description = 将缩放因子设置为1%（降采样=100）
Action.View.Zoom.zoomIn = 放大
Action.View.Zoom.zoomIn.description = 为当前查看器放大
Action.View.Zoom.zoomOut = 缩小
Action.View.Zoom.zoomOut.description = 为当前查看器缩小
Action.View.Zoom.zoomToFit = 缩放以适应
Action.View.Zoom.zoomToFit.description = 设置当前查看器的缩放以适应图像
Action.View.Multitouch.allOn = 开启所有手势
Action.View.Multitouch.allOn.description = 为触摸屏和触控板开启所有多点触控手势
Action.View.Multitouch.allOff = 关闭所有手势
Action.View.Multitouch.allOff.description = 为触摸屏和触控板关闭所有多点触控手势
Action.View.Multitouch.scroll = 使用滚动手势
Action.View.Multitouch.scroll.description = 切换触摸屏和触控板的滚动手势
Action.View.Multitouch.zoom = 使用缩放触摸手势
Action.View.Multitouch.zoom.description = 切换触摸屏和触控板的缩放手势
Action.View.Multitouch.rotate = 使用旋转触摸手势
Action.View.Multitouch.rotate.description = 切换触摸屏和触控板的旋转手势

# Objects menu
Menu.Objects = 对象
Menu.Objects.Delete = 删除...
Menu.Objects.Select = 选择...
Menu.Objects.Select.Detections = 选择检测结果...
Menu.Objects.Lock = 锁定...
Menu.Objects.Annotations = 注释...

Action.Objects.Delete.selected = 删除选中的对象
Action.Objects.Delete.selected.description = 删除当前选中的对象
Action.Objects.Delete.all = 删除所有对象
Action.Objects.Delete.all.description = 删除当前图像的所有对象
Action.Objects.Delete.annotations = 删除所有注释
Action.Objects.Delete.annotations.description = 删除当前图像的所有注释对象
Action.Objects.Delete.detections = 删除所有检测结果
Action.Objects.Delete.detections.description = 删除当前图像的所有检测对象

Action.Objects.Select.reset = 重置选择
Action.Objects.Select.reset.description = 重置当前图像的选择对象
Action.Objects.Select.tmaCores = 选择TMA核心
Action.Objects.Select.tmaCores.description = 选择当前图像的所有TMA核心
Action.Objects.Select.annotations = 选择注释
Action.Objects.Select.annotations.description = 选择当前图像的所有注释对象
Action.Objects.Select.detections = 选择所有检测结果
Action.Objects.Select.detections.description = 选择当前图像的所有检测对象（这包括细胞和图块）
Action.Objects.Select.cells = 选择细胞
Action.Objects.Select.cells.description = 选择当前图像的所有细胞对象
Action.Objects.Select.tiles = 选择图块
Action.Objects.Select.tiles.description = 选择当前图像的所有图块对象
Action.Objects.Select.selectByClassification = 按分类选择对象
Action.Objects.Select.selectByClassification.description = 基于对象的分类选择对象
Action.Objects.Select.selectOnCurrentPlane = 选择当前平面上的对象
Action.Objects.Select.selectOnCurrentPlane.description = 选择查看器中可见的当前平面上的所有对象

Action.Objects.Lock.lockSelected = 锁定选中的对象
Action.Objects.Lock.lockSelected.description = 锁定所有当前选中的对象
Action.Objects.Lock.unlockSelected = 解锁选中的对象
Action.Objects.Lock.unlockSelected.description = 解锁所有当前选中的对象
Action.Objects.Lock.toggleSelected = 切换选中对象的锁定状态
Action.Objects.Lock.toggleSelected.description = 切换所有当前选中对象的"锁定"状态

Action.Objects.Annotation.specify = 指定注释
Action.Objects.Annotation.specify.description = 创建具有指定属性的矩形或椭圆注释
Action.Objects.Annotation.fullImage = 创建全图像注释
Action.Objects.Annotation.fullImage.description = 创建表示当前图像完整宽度和高度的注释
Action.Objects.Annotation.hierarchyInsert = 插入到层次结构
Action.Objects.Annotation.hierarchyInsert.description = 将选中的对象插入到对象层次结构中。\n这涉及基于感兴趣区域解析父/子关系。
Action.Objects.Annotation.hierarchyResolve = 解析层次结构
Action.Objects.Annotation.hierarchyResolve.description = 通过基于感兴趣区域设置对象之间的父/子关系来解析对象层次结构。
Action.Objects.Annotation.transform = 变换注释
Action.Objects.Annotation.transform.description = 交互式平移和/或旋转当前选中的注释。
Action.Objects.Annotation.duplicate = 复制选中的注释
Action.Objects.Annotation.duplicate.description = 复制选中的注释
Action.Objects.Annotation.copyToCurrentPlane = 将注释复制到当前平面
Action.Objects.Annotation.copyToCurrentPlane.description = 复制选中的对象并将它们粘贴到当前平面（即查看器中可见的z切片和时间点）。\n这避免了使用系统剪贴板。它旨在帮助在多维图像之间快速传输注释。
Action.Objects.Annotation.transferLast = 传输最后一个注释
Action.Objects.Annotation.transferLast.description = 将最后一个注释传输到当前图像。\n这可以用于将一个查看器中的注释带到另一个查看器，或恢复刚刚删除的注释。
Action.Objects.Annotation.expand = 扩展注释
Action.Objects.Annotation.expand.description = 扩展（或收缩）选中的注释，可选择移除内部。
Action.Objects.Annotation.split = 分割注释
Action.Objects.Annotation.split.description = 将包含断开部分的复杂注释分割成单独的注释
Action.Objects.Annotation.splitByLines = 按线条分割注释
Action.Objects.Annotation.splitByLines.description = 沿由线条注释定义的线条分割区域注释
Action.Objects.Annotation.removeFragmentsFillHoles = 移除片段和填充孔
Action.Objects.Annotation.removeFragmentsFillHoles.description = 移除包含断开部分的小注释片段
Action.Objects.Annotation.fillHoles = 填充孔
Action.Objects.Annotation.fillHoles.description = 填充注释内出现的孔
Action.Objects.Annotation.makeInverse = 创建反相
Action.Objects.Annotation.makeInverse.description = 创建与选中注释"反相"对应的注释。\n反相注释包含当前注释之外的"所有其他内容"，受其父对象约束。
Action.Objects.Annotation.mergeSelected = 合并选中的
Action.Objects.Annotation.mergeSelected.description = 合并选中的注释成为一个单独的注释。
Action.Objects.Annotation.simplify = 简化形状
Action.Objects.Annotation.simplify.description = 简化当前选中注释的形状。\n这移除被认为不必要的顶点，使用指定的幅度容差。

Action.Objects.refreshIds = 刷新对象ID
Action.Objects.refreshIds.description = 更新所有对象ID以确保它们是唯一的
Action.Objects.refreshDuplicateIds = 刷新重复对象ID
Action.Objects.refreshDuplicateIds.description = 更新所有重复对象ID以确保它们是唯一的

# Window menu
Menu.Window = 窗口
Action.Window.centerWindows = 居中所有窗口
Action.Window.centerWindows.description = 将所有窗口移动到屏幕中心
Action.Window.centerOffscreen = 居中离屏窗口
Action.Window.centerOffscreen.description = 将部分或完全离屏的所有窗口移动到中心
Action.Window.systemMenubar = 使用系统菜单栏
Action.Window.systemMenubar.description = 尽可能使用系统菜单栏。\n\
  替代方案是为每个窗口单独添加菜单栏。
Action.Window.imageName = 显示图像名称
Action.Window.imageName.description = 在主窗口标题栏中显示当前图像的名称。

# TMA menu
Menu.TMA = TMA
Menu.TMA.add = 添加...
Menu.TMA.remove = 移除...

Action.TMA.specifyGrid = 指定TMA网格
Action.TMA.specifyGrid.description = 通过定义标签和核心直径创建手动TMA网格。\n这可以可选地限制在矩形注释内。
Action.TMA.addRowAbove = 在选中项上方添加TMA行
Action.TMA.addRowAbove.description = 在包含当前选中对象的行之前（上方）向TMA网格添加行
Action.TMA.addRowBelow = 在选中项下方添加TMA行
Action.TMA.addRowBelow.description = 在包含当前选中对象的行之后（下方）向TMA网格添加行
Action.TMA.addColumnBefore = 在选中项之前添加TMA列
Action.TMA.addColumnBefore.description = 在包含当前选中对象的列之前（左侧）向TMA网格添加列
Action.TMA.addColumnAfter = 在选中项之后添加TMA列
Action.TMA.addColumnAfter.description = 在包含当前选中对象的列之后（右侧）向TMA网格添加列

Action.TMA.removeRow = 移除TMA行
Action.TMA.removeRow.description = 从TMA网格中移除包含当前选中对象的行
Action.TMA.removeColumn = 移除TMA列
Action.TMA.removeColumn.description = 从TMA网格中移除包含当前选中对象的列

Action.TMA.relabel = 重新标记TMA网格
Action.TMA.relabel.description = 重新标记TMA网格的核心。在添加或删除行或列后通常需要此操作。
Action.TMA.resetMetadata = 重置TMA元数据
Action.TMA.resetMetadata.description = 移除当前图像中TMA网格的所有元数据
Action.TMA.deleteGrid = 删除TMA网格
Action.TMA.deleteGrid.description = 删除当前图像的整个TMA网格
Action.TMA.findHull = 查找凸包检测结果（TMA）
Action.TMA.findHull.description = 查找TMA核心内检测结果的凸包上的所有检测结果。\n这可以用于找到核心边缘的细胞，然后可以在必要时删除。\n这些细胞由于伪影可能产生不太可靠的测量结果。

# Automate menu
Menu.Automate = 自动化
Action.Automate.scriptEditor = 脚本编辑器
Action.Automate.scriptEditor.description = 打开脚本编辑器
Action.Automate.scriptInterpreter = 脚本解释器
Action.Automate.scriptInterpreter.description = 打开脚本解释器以交互式运行脚本，逐行运行。\n（通常，脚本编辑器更有用）。
Action.Automate.commandWorkflow = 显示工作流命令历史
Action.Automate.commandWorkflow.description = 显示应用于当前图像的命令历史。\n请注意，这并不完全详尽，因为并非所有命令都可以记录。\n但是，命令历史对于帮助自动生成批处理脚本很有用。
Action.Automate.commandScript = 创建命令历史脚本
Action.Automate.commandScript.description = 基于命令历史中记录的操作创建脚本

# Measure menu
Menu.Measure = 测量
Menu.Measure.GridViews = 网格视图...

Action.Measure.maps = 显示测量图
Action.Measure.maps.description = 使用交互式、颜色编码的图在上下文中查看检测测量结果
Action.Measure.manager = 显示测量管理器
Action.Measure.manager.description = 查看并可选删除检测测量结果
Action.Measure.export = 导出测量结果
Action.Measure.export.description = 导出项目内多个图像的汇总测量结果

# Extensions menu
Menu.Extensions = 扩展

Action.Extensions.installed = 管理扩展
Action.Extensions.installed.description = 管理已安装的QuPath扩展列表

# Help menu
Menu.Help = 帮助

Action.Help.welcome = 显示欢迎消息
Action.Help.welcome.description = 显示首次启动QuPath时出现的欢迎消息
Action.Help.docs = 文档（网页）
Action.Help.docs.description = 在网页浏览器中打开主要QuPath文档
Action.Help.video = YouTube频道（网页）
Action.Help.video.description = 在网页浏览器中打开QuPath YouTube频道以查看演示视频和教程
Action.Help.updates = 检查更新（网页）
Action.Help.updates.description = 在线检查QuPath和支持的扩展的更新
Action.Help.cite = 在论文中引用QuPath（网页）
Action.Help.cite.description = 如果您使用该软件，请引用QuPath出版物！\n此命令打开一个网页以显示如何引用。
Action.Help.issues = 报告错误（网页）
Action.Help.issues.description = 在网页浏览器中打开QuPath的问题页面以报告错误。\n请遵循错误报告模板 - 对于一般问题请使用论坛。
Action.Help.forum = 查看用户论坛（网页）
Action.Help.forum.description = 访问image.sc上的用户论坛。\n这是询问QuPath问题的地方 - 也是帮助其他用户的地方。
Action.Help.source = 查看源代码（网页）
Action.Help.source.description = 在GitHub上查看QuPath的源代码
Action.Help.license = 许可证
Action.Help.license.description = 查看QuPath及其第三方依赖项的许可证信息
Action.Help.systemInfo = 系统信息
Action.Help.systemInfo.description = 查看有关此QuPath安装的技术信息

# Submenu name for deprecated commands
Menu.deprecated = 已弃用

# Built-in extension commands (may be moved elsewhere)
Extension.ImageJ = ImageJ扩展
Extension.ImageJ.description = 启用与ImageJ集成的QuPath命令 - https://imagej.nih.gov/ij/

Action.ImageJ.superpixelsSLIC = SLIC超像素分割
Action.ImageJ.superpixelsSLIC.description = 使用SLIC方法创建超像素图块
Action.ImageJ.superpixelsDoG = DoG超像素分割
Action.ImageJ.superpixelsDoG.description = 使用高斯差分方法创建超像素图块

Action.ImageJ.tilesToAnnotations = 图块分类到注释
Action.ImageJ.tilesToAnnotations.description = 合并具有相同分类的图块成为注释

Action.ImageJ.pixelCount = 阳性像素计数
Action.ImageJ.pixelCount.description = 基于面积的DAB染色阳性像素量化。\n此命令不能很好地处理大区域；如果可能，通常应该使用像素分类。
Action.ImageJ.simpleTissueDetection = 简单组织检测
Action.ImageJ.simpleTissueDetection.description = 使用简单的阈值方法检测大区域。\n此命令不够灵活，且缺乏结果预览；如果可能，通常应该使用像素分类。

Action.ImageJ.tmaDearrayer = TMA解阵列器
Action.ImageJ.tmaDearrayer.description = 识别组织微阵列的核心和网格排列

Action.ImageJ.cellDetection = 细胞检测
Action.ImageJ.cellDetection.description = QuPath中的默认细胞检测。\n请注意，这是通用方法，未针对任何特定染色进行优化。\n\n在运行此命令之前，必须首先设置图像类型（例如明场或荧光）。
Action.ImageJ.positiveCellDetection = 阳性细胞检测
Action.ImageJ.positiveCellDetection.description = 等同于"细胞检测"，具有在检测期间设置阈值以识别单阳性细胞的额外参数。
Action.ImageJ.cellAndMembraneDetection = 细胞+膜检测
Action.ImageJ.cellAndMembraneDetection.description = 使用膜信息来约束细胞边界扩展的细胞检测。\n\n这是专门为苏木精和DAB染色设计的，仅在膜染色非常清晰或不存在时有效。一般不推荐使用。
Action.ImageJ.subcellularDetection = 亚细胞检测（实验性）
Action.ImageJ.subcellularDetection.description = 在检测到的细胞中识别亚细胞结构（例如各种斑点）。

Action.ImageJ.scriptRunner = ImageJ脚本运行器
Action.ImageJ.scriptRunner.description = 在QuPath中运行ImageJ脚本和宏。\n\
  这提取对应于QuPath对象的图像区域，然后将它们传递给ImageJ进行处理。
Action.ImageJ.legacyMacroRunner = 旧版ImageJ宏运行器
Action.ImageJ.legacyMacroRunner.description = 在QuPath中运行ImageJ宏的旧命令。\n\
  这已被QuPath v0.6.0替换。
Action.ImageJ.setImageJDirectory = 设置本地ImageJ目录
Action.ImageJ.setImageJDirectory.description = 设置与QuPath的嵌入式ImageJ版本一起使用的目录。\n\n\
  设置后，现有ImageJ安装的插件将可用于QuPath的嵌入式ImageJ版本\
  （只要它们没有不兼容的依赖项）。

Action.ImageJ.showImageJ = 显示ImageJ
Action.ImageJ.showImageJ.description = 显示主ImageJ窗口
Action.ImageJ.extractRegion = 将区域发送到ImageJ
Action.ImageJ.extractRegion.description = 提取选中的图像区域并将其发送到ImageJ
Action.ImageJ.extractRegionSnapshot = 将快照发送到ImageJ
Action.ImageJ.extractRegionSnapshot.description = 创建渲染的（RGB）快照并将其发送到ImageJ

Action.ImageJ.importRois = 导入ImageJ ROI
Action.ImageJ.importRois.description = 从.roi或.zip文件导入ImageJ ROI，将它们转换为QuPath对象

# SVG extension
Extension.SVG = SVG导出扩展
Extension.SVG.description = 以SVG格式导出快照和图像
Action.SVG.exportImage = 渲染的SVG
Action.SVG.exportImage.description = 将当前选中区域导出为渲染的（RGB）SVG图像。\n任何注释和ROI将存储为矢量，可以在其他软件中调整。
Action.SVG.exportSnapshot = 当前查看器内容（SVG）
Action.SVG.exportSnapshot.description = 将当前查看器内容的RGB快照导出为SVG图像。\n任何注释和ROI将存储为矢量，可以在其他软件中调整。

# Bio-Formats extension
Extension.BioFormats = Bio-Formats扩展
Extension.BioFormats.description = 安装使用Bio-Formats读取和写入选项使用Bio-Formats读取和写入图像的支持（https://www.openmicroscopy.org/bio-formats/）
Extension.BioFormats.missing.description = 找不到此扩展所需的Bio-Formats库！
Action.BioFormats.exportOmeTif = OME-TIFF
Action.BioFormats.exportOmeTif.description = 将区域写入为OME-TIFF图像。这支持写入图像金字塔。
Action.BioFormats.omeZarr = OME-Zarr
Action.BioFormats.omeZarrWriter = OME-Zarr写入器
Action.BioFormats.stopCurrentExport = 您是否要停止当前导出？
Action.BioFormats.exportOMEZarr = 导出OME-Zarr
Action.BioFormats.writeOMEZarr = 写入OME-Zarr
Action.BioFormats.invalidZarrExtension = 文件扩展名必须是.ome.zarr
Action.BioFormats.directoryAlreadyExists = 目录必须不存在
Action.BioFormats.exportingTo = 正在导出到{0} -\n请保持QuPath运行直到导出完成！
Action.BioFormats.exportComplete = {0}导出完成！
Action.BioFormats.pyramidalDownsample = 金字塔降采样
Action.BioFormats.pyramidalDownsampleDetail = 每个连续金字塔级别要降采样的量；使用1表示图像不应是金字塔式
Action.BioFormats.tileSize = 图块大小
Action.BioFormats.tileSizeDetail = 导出的图块宽度和高度
Action.BioFormats.allZSlices = 所有z切片
Action.BioFormats.allZSlicesDetail = 包含堆栈中的所有z切片。如果未选中，仅考虑当前z切片
Action.BioFormats.allTimepoints = 所有时间点
Action.BioFormats.allTimepointsDetail = 包含时间序列中的所有时间点。如果未选中，仅考虑当前时间点
Action.BioFormats.numberOfThreads = 线程数
Action.BioFormats.numberOfThreadsDetail = 用于导出的线程数

# Processing extension
Extension.Processing = 处理和分类扩展
Extension.Processing.description = 核心处理和分类命令

Action.Processing.Spatial.delaunay = Delaunay聚类特征2D
Action.Processing.Spatial.delaunay.description = 基于检测对象的质心位置应用Delaunay三角剖分。\n这有助于识别彼此相邻的对象簇。\n\n注意此命令在未来版本中可能被替换。

Action.Processing.CellDetection.fastCellCounts = 快速细胞计数（明场）
Action.Processing.CellDetection.fastCellCounts.description = 苏木精和DAB图像的快速细胞计数

Action.Processing.DensityMaps.create = 创建密度图
Action.Processing.DensityMaps.create.description = 创建密度图以识别包含高密度检测结果（例如细胞）的区域，可选择指定分类
Action.Processing.DensityMaps.load = 加载密度图
Action.Processing.DensityMaps.load.description = 加载之前使用"创建密度图"生成的密度图

Action.Processing.Classify.loadPixelClassifier = 加载像素分类器
Action.Processing.Classify.loadPixelClassifier.description = 加载现有的像素分类器。\n这可以用于将分类器应用到新图像，但不能继续训练。
Action.Processing.Classify.trainPixelClassifier = 训练像素分类器
Action.Processing.Classify.trainPixelClassifier.description = 训练像素分类器。\n这可以用于量化区域，或生成或分类对象。
Action.Processing.Classify.createThresholder = 创建阈值器
Action.Processing.Classify.createThresholder.description = 创建一个简单的像素分类器，对图像应用固定阈值

Action.Processing.Classify.loadObjectClassifier = 加载对象分类器
Action.Processing.Classify.loadObjectClassifier.description = 加载现有的对象分类器。\n这可以用于将分类器应用到新对象，但不能继续训练。
Action.Processing.Classify.trainObjectClassifier = 训练对象分类器
Action.Processing.Classify.trainObjectClassifier.description = 使用机器学习交互式训练对象分类器。\n这在对象不能仅基于一个测量进行分类时很有用。
Action.Processing.Classify.createSingleMeasurementClassifier = 创建单测量分类器
Action.Processing.Classify.createSingleMeasurementClassifier.description = 创建一个简单的对象分类器，对单个测量应用阈值
Action.Processing.Classify.createCompositeClassifier = 创建复合分类器
Action.Processing.Classify.createCompositeClassifier.description = 通过按顺序应用多个分类器来组合它们，创建一个分类器
Action.Processing.Classify.setCellIntensityClassifications = 设置细胞强度分类
Action.Processing.Classify.setCellIntensityClassifications.description = 基于单个测量设置细胞强度分类。\n这可以用于计算阳性细胞的密度/百分比或H分数。

Action.Processing.Classify.createRegionAnnotations = 创建区域注释
Action.Processing.Classify.createRegionAnnotations.description = 创建固定大小区域的注释。\n这可以用于选择多个图像的代表性区域来训练（通常是像素）分类器，与"创建训练图像"结合使用。
Action.Processing.Classify.createTrainingImage = 创建训练图像
Action.Processing.Classify.createTrainingImage.description = 创建一个由从项目中的多个图像提取的区域组成的图像。\n这对于在变化的数据集上交互式训练分类器很有用。
Action.Processing.Classify.createChannelTrainingImages = 创建重复通道训练图像
Action.Processing.Classify.createChannelTrainingImages.description = 在项目中复制图像，使每个图像通道都有一个副本。\n\n这可以用于为多重图像中的不同通道训练单独的分类器，然后将它们合并形成复合分类器。
Action.Processing.Classify.splitTrainValidationTest = 分割项目训练/验证/测试
Action.Processing.Classify.splitTrainValidationTest.description = 将项目中的图像分割为训练、验证和测试集

# Simple image viewer
SimpleImageViewer.Action.close = 关闭
SimpleImageViewer.Action.close.description = 关闭图像窗口
SimpleImageViewer.Action.copy = 复制
SimpleImageViewer.Action.copy.description = 将图像复制到剪贴板
SimpleImageViewer.Action.save = 另存为
SimpleImageViewer.Action.save.description = 保存图像
SimpleImageViewer.Action.saturation = 设置饱和度
SimpleImageViewer.Action.saturation.description = 设置饱和度以改善非8位图像的对比度
SimpleImageViewer.Action.expandToWindow = 展开以适应窗口
SimpleImageViewer.Action.expandToWindow.description = 允许图像增长以适应窗口。否则，图像将被限制为其首选大小。
SimpleImageViewer.placeholderText = 没有可用的图像
SimpleImageViewer.noImage = 没有图像
SimpleImageViewer.noTitle = 无标题图像

# Preferences
Prefs.Appearance = 外观
Prefs.General = 常规
Prefs.Undo = 撤销/重做
Prefs.Drawing = 绘图工具
Prefs.InputOutput = 输入/输出
Prefs.Locale = 语言和区域
Prefs.Measurements = 测量表
Prefs.Scripting = 脚本
Prefs.Extensions = 扩展
Prefs.Objects = 对象
Prefs.Viewer = 查看器
Prefs.BioFormats = Bio-Formats

Prefs.Appearance.theme = 主题
Prefs.Appearance.theme.description = QuPath用户界面的主题。
Prefs.Appearance.badges = 显示工具栏徽章
Prefs.Appearance.badges.description = 在工具栏按钮上包含徽章，例如警告或错误。
Prefs.Appearance.font = 字体
Prefs.Appearance.font.description = QuPath用户界面的主字体。
Prefs.Appearance.systemMenubar = 使用系统菜单栏
Prefs.Appearance.systemMenubar.description = 使用系统菜单栏，而不是自定义应用程序菜单栏（默认为true）。

Prefs.General.showStartupMessage = 显示欢迎消息
Prefs.General.showStartupMessage.description = 每次启动QuPath时显示带有文档、论坛和代码链接的欢迎消息。\n您可以随时通过"帮助"菜单访问此消息。
Prefs.General.startupScriptPath = 启动脚本路径
Prefs.General.startupScriptPath.description = 可选选择在QuPath启动后立即运行的Groovy脚本文件。
Prefs.General.checkForUpdates = 启动时检查更新
Prefs.General.checkForUpdates.description = 在QuPath启动时自动检查更新，如果有新版本可用则显示消息。
Prefs.General.showImageNameInTitle = 在窗口标题中显示图像名称
Prefs.General.showImageNameInTitle.description = 在QuPath主标题栏中显示当前图像的名称（如果不应看到名称，请关闭此选项）。
Prefs.General.maskImageNames = 在项目中屏蔽图像名称
Prefs.General.maskImageNames.description = 使用项目时屏蔽图像名称，以帮助减少分析期间用户偏见的可能性。
Prefs.General.skipProjectUriChecks = 跳过项目中的文件检查
Prefs.General.skipProjectUriChecks.description = 避免在项目浏览器中检查文件是否存在。如果项目浏览器由于网络延迟而变慢，这可能会有帮助。
Prefs.General.maxMemory = 设置最大内存
Prefs.General.maxMemory.description = 设置Java的最大内存。\n请注意，某些命令（例如像素分类）在需要时仍可能使用更多内存，\n因此此值通常不应超过系统总内存的一半。
Prefs.General.tileCache = 图块缓存的内存百分比
Prefs.General.tileCache.description = 用于缓存图像图块的最大内存百分比（必须>10%且<90%；建议值为25%）。\n高值可以提高性能（特别是对于多通道图像），但会增加内存不足错误的风险。\n更改在QuPath重启后生效。
Prefs.General.logFiles = 创建日志文件
Prefs.General.logFiles.description = 在QuPath用户目录中创建使用QuPath时的日志文件（对于调试和报告错误很有用）。
Prefs.General.showExperimental = 显示实验性命令
Prefs.General.showExperimental.description = 在菜单中包含实验性命令 - 这些命令可能特别容易出错且不完整，但偶尔可能有用。
Prefs.General.showTMA = 显示TMA命令
Prefs.General.showTMA.description = 包含与组织微阵列（TMA）相关的菜单项。
Prefs.General.showDeprecated = 显示已弃用命令
Prefs.General.showDeprecated.description = 包含与旧命令相关的菜单项（不再打算使用）。
Prefs.General.hierarchyDisplay = 层次结构检测显示
Prefs.General.hierarchyDisplay.description = 选择如何在层次结构树视图中显示检测结果 - 选择"无"以获得最佳性能。
Prefs.General.logLevel = 日志级别
Prefs.General.logLevel.description = 日志级别，决定日志消息的数量。\n建议仅使用INFO或DEBUG；更频繁的日志记录（例如TRACE、ALL）可能会导致性能问题。
Prefs.General.numThreads = 并行线程数
Prefs.General.numThreads.description = 设置用于并行化的处理器数量限制。\n这应该>0且<=计算机上的可用处理器。\n如果超出此范围，它将默认为可用处理器。\n通常使用默认值即可，但如果遇到内存不足错误，减少它可能有帮助。
Prefs.General.imageType = 设置图像类型
Prefs.General.imageType.description = 首次打开时自动估计和设置图像类型（例如H&E、H-DAB、荧光），提示或保持未设置。\n估计可能很方便，但请注意它可能并不总是正确的 - 您应该始终检查！\n图像类型会影响某些可用命令，例如如何分离染色以显示或细胞检测。
Prefs.General.commandBar = 命令栏显示模式
Prefs.General.commandBar.description = 用于在查看器顶部显示命令查找器文本字段的模式。

Prefs.Drawing.returnToMove = 自动返回到移动工具
Prefs.Drawing.returnToMove.description = 绘制ROI后自动将选中的工具返回到"移动"（适用于除画笔和魔棒之外的所有绘图工具）。
Prefs.Drawing.pixelSnapping = 使用像素对齐
Prefs.Drawing.pixelSnapping.description = 使用绘图工具时自动将像素对齐到整数坐标（某些工具，例如线条、点可能会覆盖此设置）。
Prefs.Drawing.clipROIsForHierarchy = 为层次结构裁剪ROI
Prefs.Drawing.clipROIsForHierarchy.description = 自动裁剪ROI，使其不超出父注释或侵占子注释 - 这有助于保持层次结构更容易解释，没有重叠。\n可以通过按住"shift"键来覆盖此设置。
Prefs.Drawing.brushDiameter = 画笔直径
Prefs.Drawing.brushDiameter.description = 设置默认画笔直径。
Prefs.Drawing.tileBrush = 使用图块画笔
Prefs.Drawing.tileBrush.description = 在可用时调整画笔工具以选择图块。
Prefs.Drawing.brushScaleByMag = 按放大倍数缩放画笔
Prefs.Drawing.brushScaleByMag.description = 按放大倍数调整画笔大小，因此更高的放大倍数给出更细的画笔。
Prefs.Drawing.useMultipoint = 使用多点工具
Prefs.Drawing.useMultipoint.description = 使用计数工具时，如果可能，将点添加到现有对象。\n替代方案是每次点击创建新点。
Prefs.Drawing.pointRadius = 点半径
Prefs.Drawing.pointRadius.description = 设置查看器中显示的默认点半径。

Prefs.Drawing.wandType = 魔棒颜色类型
Prefs.Drawing.wandType.description = 使用魔棒时指定颜色空间；如果是"灰色"，则魔棒使用"暗度"而不参考特定颜色
Prefs.Drawing.wandSigma = 魔棒平滑
Prefs.Drawing.wandSigma.description = 设置魔棒工具使用的平滑 - 更高的值导致更大、更平滑的区域（默认=4.0）
Prefs.Drawing.wandSensivity = 魔棒灵敏度
Prefs.Drawing.wandSensivity.description = 设置魔棒工具的灵敏度 - 较低的值使其较少关注局部强度，更像画笔工具（默认=2.0）
Prefs.Drawing.wandUseOverlays = 魔棒使用叠加层
Prefs.Drawing.wandUseOverlays.description = 使用图像叠加层信息来影响使用魔棒工具创建的区域

Prefs.InputOutput.minPyramidDimension = 金字塔化的最小图像尺寸
Prefs.InputOutput.minPyramidDimension.description = 如果宽度或高度大于此大小，则允许为单分辨率图像计算图像金字塔。
Prefs.InputOutput.tmaExportDownsample = TMA导出降采样因子
Prefs.InputOutput.tmaExportDownsample.description = 导出时TMA核心图像的降采样量；更高的降采样值给出更小的图像。\n选择1以全分辨率导出核心（可能较慢）。

Prefs.Locale.default = 主要语言
Prefs.Locale.default.description = 全局默认区域设置；更改此设置可以更新显示和格式区域设置。\n强烈建议使用英语（美国）以获得一致的格式，特别是\n小数（使用.作为小数分隔符）。\n\n您可以通过双击下拉菜单重置区域设置。
Prefs.Locale.display = 用户界面
Prefs.Locale.display.description = 用于显示消息的区域设置。\n建议使用英语（美国）以获得一致的格式。\n如果添加了额外的语言支持，其他语言可能可用。
Prefs.Locale.format = 日期和数字
Prefs.Locale.format.description = 用于格式化日期、数字等的区域设置。\n强烈建议使用英语（美国）以获得一致的格式，特别是\n小数（使用.作为小数分隔符）。\n\n您可以通过双击下拉菜单重置区域设置。

Prefs.Measurements.thumbnails = 包含缩略图
Prefs.Measurements.thumbnails.description = 默认在测量表中为每个对象显示缩略图。
Prefs.Measurements.ids = 包含对象ID
Prefs.Measurements.ids.description = 在测量表中默认显示对象ID列。

Prefs.Undo.maxUndoLevels = 最大撤销级别
Prefs.Undo.maxUndoLevels.description = 支持的最大"撤销"级别数。
Prefs.Undo.maxUndoHierarchySize = 最大撤销层次结构大小
Prefs.Undo.maxUndoHierarchySize.description = 在"撤销"关闭之前层次结构中的最大对象数（出于性能原因）。

Prefs.Scripting.scriptsPath = 脚本目录
Prefs.Scripting.scriptsPath.description = 包含应通过QuPath菜单可用的脚本的目录路径。

Prefs.Extensions.userPath = QuPath用户目录
Prefs.Extensions.userPath.description = QuPath用户目录的路径，可以包含脚本、日志和扩展。\n设置此选项后请重启QuPath。

Prefs.Objects.clipboard = 剪贴板对象的最大数量
Prefs.Objects.clipboard.description = 可以复制到系统剪贴板的最大对象数。\n尝试复制太多可能会失败，或导致QuPath挂起。\n如果您需要更多对象，最好导出为GeoJSON然后稍后导入。
Prefs.Objects.annotationLineThickness = 注释线条粗细
Prefs.Objects.annotationLineThickness.description = 注释/TMA核心对象轮廓的粗细（显示像素）（默认=2）
Prefs.Objects.detectionLineThickness = 检测线条粗细
Prefs.Objects.detectionLineThickness.description = 检测对象轮廓的粗细（图像像素）（默认=2）
Prefs.Objects.newDetectionRendering = 动态检测线条粗细（实验性）
Prefs.Objects.newDetectionRendering.description = 实验性功能，使用随缩放级别缩放的笔画粗细渲染检测对象
Prefs.Objects.useSelectedColor = 使用选中颜色
Prefs.Objects.useSelectedColor.description = 通过重新着色突出显示选中的对象；否则，将使用稍厚的线条粗细
Prefs.Objects.selectedColor = 选中对象颜色
Prefs.Objects.selectedColor.description = 如果开启"使用选中颜色"，设置用于突出显示选中对象的颜色
Prefs.Objects.defaultColor = 默认对象颜色
Prefs.Objects.defaultColor.description = 设置任何没有设置颜色或分类的对象的默认颜色
Prefs.Objects.tmaCoreColor = TMA核心颜色
Prefs.Objects.tmaCoreColor.description = 设置TMA核心对象的默认颜色
Prefs.Objects.tmaCoreMissingOpacity = TMA缺失不透明度
Prefs.Objects.tmaCoreMissingOpacity.description = 设置绘制缺失TMA核心对象时使用的不透明度

Prefs.Viewer.backgroundColor = 查看器背景颜色
Prefs.Viewer.backgroundColor.description = 设置显示在任何图像后面的颜色（即超出图像边界）。
Prefs.Viewer.alwaysPaintSelected = 始终绘制选中的对象
Prefs.Viewer.alwaysPaintSelected.description = 即使叠加层不透明度设置为0，也始终绘制选中的对象
Prefs.Viewer.keepDisplaySettings = 保持通道设置
Prefs.Viewer.keepDisplaySettings.description = 打开类似图像时保持通道显示设置（通道颜色、亮度/对比度）
Prefs.Viewer.interpolateBilinear = 使用双线性插值
Prefs.Viewer.interpolateBilinear.description = 使用双线性插值在查看器中显示图像（默认为最近邻）。
Prefs.Viewer.autoSaturationPercent = 自动亮度/对比度饱和度%
Prefs.Viewer.autoSaturationPercent.description = 设置应用"自动"亮度/对比度设置时应饱和的亮%和暗%像素。
Prefs.Viewer.invertZSlider = 反转z位置滑块
Prefs.Viewer.invertZSlider.description = 反转用于在z切片之间滚动的垂直滑块（对于默认方向似乎违反直觉的人来说很有用）。
Prefs.Viewer.scrollSpeed = 滚动速度%
Prefs.Viewer.scrollSpeed.description = 调整滚动速度 - 100%为"正常"，而较低的值导致较慢的滚动
Prefs.Viewer.navigationSpeed = 导航速度%
Prefs.Viewer.navigationSpeed.description = 调整导航速度 - 100%为"正常"，而较低的值导致较慢的导航

Prefs.Viewer.navigationAcceleration = 使用导航加速
Prefs.Viewer.navigationAcceleration.description = 按住和释放导航键时应用加速/减速效果。
Prefs.Viewer.skipMissingCores = 跳过缺失的TMA核心
Prefs.Viewer.skipMissingCores.description = 使用箭头键导航TMA网格时跳过缺失的TMA核心。
Prefs.Viewer.iseScrollGestures = 使用滚动触摸手势
Prefs.Viewer.iseScrollGestures.description = 使用触摸屏或触控板的滚动手势来导航幻灯片。
Prefs.Viewer.invertScrolling = 反转滚动
Prefs.Viewer.invertScrolling.description = 反转滚动的效果 - 可能会抵消与QuPath配合不好的系统设置。
Prefs.Viewer.useZoomGestures = 使用缩放触摸手势
Prefs.Viewer.useZoomGestures.description = 使用触摸屏或触控板的"捏合缩放"手势。
Prefs.Viewer.useRotateGestures = 使用旋转触摸手势
Prefs.Viewer.useRotateGestures.description = 使用触摸屏或触控板的旋转手势来导航幻灯片。
Prefs.Viewer.enableFreehand = 为多边形和折线工具启用自由绘制模式
Prefs.Viewer.enableFreehand.description = 通过点击和拖动开始绘制多边形/折线时，可选择通过释放鼠标按钮结束ROI（而不是双击）。
Prefs.Viewer.doubleClickToZoom = 使用双击缩放
Prefs.Viewer.doubleClickToZoom.description = 使用移动工具在图像上双击时放大（如果不在对象内）；如果按住Alt或Ctrl/Cmd则缩小。

Prefs.Viewer.scalebarFontSize = 比例尺字体大小
Prefs.Viewer.scalebarFontSize.description = 调整比例尺的字体大小
Prefs.Viewer.scalebarFontWeight = 比例尺字体粗细
Prefs.Viewer.scalebarFontWeight.description = 调整比例尺的字体粗细
Prefs.Viewer.scalebarLineWidth = 比例尺线条粗细
Prefs.Viewer.scalebarLineWidth.description = 调整比例尺的线条粗细
Prefs.Viewer.locationFontSize = 位置文本字体大小
Prefs.Viewer.locationFontSize.description = 调整位置文本的字体大小
Prefs.Viewer.calibratedLocationString = 使用校准的位置文本
Prefs.Viewer.calibratedLocationString.description = 在可能的情况下在查看器上以µm显示像素位置
Prefs.Viewer.gridSpacingX = 网格间距X
Prefs.Viewer.gridSpacingX.description = 在查看器上显示网格时的水平网格间距
Prefs.Viewer.gridSpacingY = 网格间距Y
Prefs.Viewer.gridSpacingY.description = 在查看器上显示网格时的垂直网格间距
Prefs.Viewer.gridScaleMicrons = 网格间距（µm）
Prefs.Viewer.gridScaleMicrons.description = 在定义网格间距时尽可能使用µm单位

Prefs.localeChanged = 区域和语言已更新 - 您可能需要重启QuPath以查看所有更改
Prefs.localeReset = 重置区域设置
Prefs.localeResetMessage = "将区域设置重置为'英语（美国）'？"

Prefs.maxMemoryChanged = 最大内存设置已更改 - 您需要重启QuPath才能使此更改生效
Prefs.maxMemoryFailed = 无法设置最大内存 - 抱歉！\n查看常见问题解答或ReadTheDocs了解如何通过编辑QuPath的配置文件来设置内存限制。

Prefs.BioFormats.enable = 启用Bio-Formats
Prefs.BioFormats.enable.description = 允许QuPath使用Bio-Formats读取图像。
Prefs.BioFormats.localOnly = 仅本地文件
Prefs.BioFormats.localOnly.description = 限制Bio-Formats仅打开本地文件，而不是其他URL。\n允许Bio-Formats打开URL可能会导致性能问题，如果这导致尝试打开打算使用其他图像服务器读取的URL。
Prefs.BioFormats.useParallelization = 启用Bio-Formats图块并行化
Prefs.BioFormats.useParallelization.description = 使用Bio-Formats时启用并行读取图像图块。
Prefs.BioFormats.memoizationTimeMillis = Bio-Formats记忆化时间（毫秒）
Prefs.BioFormats.memoizationTimeMillis.description = 指定文件需要打开多长时间后Bio-Formats将创建.bfmemo文件以提高性能（设置<0以从不使用记忆化）
Prefs.BioFormats.pathMemoization = Bio-Formats记忆化目录
Prefs.BioFormats.pathMemoization.description = 选择Bio-Formats应写入记忆化缓存文件的目录；默认使用存储图像的目录。
Prefs.BioFormats.alwaysUseExtensions = 始终对指定的图像扩展名使用Bio-Formats
Prefs.BioFormats.alwaysUseExtensions.description = 请求始终使用Bio-Formats作为具有特定扩展名的图像的读取器；作为列表输入，每个条目之间用空格分隔
Prefs.BioFormats.skipExtensions = 从不使用Bio-Formats处理指定的图像扩展名
Prefs.BioFormats.skipExtensions.description = 请求从不使用Bio-Formats作为具有特定扩展名的图像的读取器；作为列表输入，每个条目之间用空格分隔

## Drag & drop messages
DragDrop = 拖放
DragDrop.loadData = 加载数据
DragDrop.loadMessage = 请将文件拖到特定查看器上以打开！
DragDrop.openImage = 打开图像
DragDrop.importObjects = 导入对象
DragDrop.openData = 打开数据
DragDrop.chooseData = 您想对数据文件做什么？
DragDrop.chooseDataOptions = "您可以\n 1. 在当前查看器中打开图像\n 2. 导入对象并将它们添加到当前图像。
DragDrop.selectProject = 选择项目
DragDrop.selectProjectToOpen = 选择要打开的项目
DragDrop.createProject = 创建项目
DragDrop.createProjectForEmptyDirectory = 为空目录创建项目？
DragDrop.TMAGridImport = TMA网格导入
DragDrop.TMAGridImportImageError = 在导入解阵列的TMA网格之前请先打开图像！
DragDrop.TMAGridSetHierarchy = "为现有层次结构设置TMA网格？"
DragDrop.TMAGridParseError = 无法从%s解析TMA网格
DragDrop.specificViewer = 请将文件拖到特定查看器上以打开！
DragDrop.projectForMultipleFiles = 无法处理多个文件拖放 - 如果要处理多个图像，需要先创建项目
DragDrop.couldNotHandleFiles = 抱歉，我无法确定如何处理这些文件 - 尝试一次打开一个
DragDrop.couldNotHandleFile = 抱歉，我无法确定如何处理%s

## Extension loader
ExtensionLoader.extensionLoaded = 扩展已加载
ExtensionLoader.extensionError = 扩展错误
ExtensionLoader.unableToLoad = 无法加载{0}
ExtensionLoader.imageServerLoaded = 图像服务器已加载

## Update manager
UpdateManager.updateCheck = 更新检查
UpdateManager.noUpdatesFound = 未找到更新！
UpdateManager.cannotCreateUpdateWindow = 无法创建更新管理器窗口
UpdateManager.updatesAvailable = 有可用的更新！\n双击条目以打开更新（如果可用）。
UpdateManager.noAvailableUrl = 没有可用的URL
UpdateManager.openExtensionManager = 打开扩展管理器

## Update manager container
UpdateManagerContainer.name = 名称
UpdateManagerContainer.currentVersion = 当前版本
UpdateManagerContainer.newVersion = 新版本
UpdateManagerContainer.checkForUpdates = 启动时检查更新：
UpdateManagerContainer.noUpdatesAvailable = 没有可用更新

## ShowInstalledExtensionsCommand
ShowInstalledExtensionsCommand.extensionManager = 扩展管理器
ShowInstalledExtensionsCommand.unableToOpen = 无法打开扩展管理器

GridView.title = 对象网格视图
GridView.TMAGridView = TMA核心网格视图
GridView.AnnotationGridView = 注释对象网格视图
GridView.noObjectsAvailable = 没有可用的对象！
GridView.classification = 分类
GridView.unclassified = 未分类
GridView.name = 名称
GridView.ascending = 升序
GridView.descending = 降序
GridView.noMeasurements = 没有测量结果！
GridView.showValue = 显示值
GridView.animate = 动画
GridView.sortBy = 排序依据
GridView.order = 顺序
GridView.size = 大小
GridView.classes = 类别
GridView.noClassSelected = 未选择类别
GridView.nClassSelected = 已选择%d个类别

# 标注菜单选项
miLockAnnotations.text = 锁定
miUnlockAnnotations.text = 解锁
miSetProperties.text = 设置属性
miInsertHierarchy.text = 插入到层次结构中
menuEdit.text = 编辑单个标注
menuCombine.text = 编辑多个标注
actionMerge.text = 合并选中
actionSubtract.text = 从选中减去
actionIntersect.text = 与选中相交
actionInverse.text = 创建反向
SplitAnnotationsPlugin.text = 拆分

# 其他菜单文本
General.objects.annotations = 标注
General.objects.detections = 检测
General.objects.cells = 细胞
General.objects.tiles = 区块
General.objects.tmaCores = TMA核心
General.add = 添加
General.remove = 移除
General.deleteObject = 删除对象
General.deleteObjects = 删除对象

